[{"title":"producto prueba","description":"Este es un producto prueba","price":800,"thumbnail":"Sin imagen","code":"aaaa123","stock":10,"id":1},{"title":"producto prueba","description":"Este es un producto prueba","price":800,"thumbnail":"Sin imagen","code":"aaa123","stock":10,"id":2}]
import http from "http";
import { promises as fs } from "fs";

class ProductManager {
}

const Manager = new ProductManager("./products.json");

const server = http.createServer(async (req, res) => {
    if (req.method === "GET") {
    } else if (req.method === "POST") {
        if (req.url === "/") {
            let body = "";
            req.on("data", (chunk) => {
                body += chunk;
            });

            req.on("end", async () => {
                try {
                    const productData = JSON.parse(body);
                    const requiredFields = [
                        "id", "title", "description", "code", "price", "status", "stock", "category"
                    ];

                    const missingFields = requiredFields.filter(field => !(field in productData));
                    if (missingFields.length > 0) {
                        res.statusCode = 400;
                        res.end(`Missing required fields: ${missingFields.join(", ")}`);
                        return;
                    }

                    
                    Manager.addProduct(productData);

                    res.statusCode = 201;
                    res.end("Product added successfully");
                } catch (error) {
                    res.statusCode = 400;
                    res.end("Invalid JSON data");
                }
            });
        } else {
            res.statusCode = 404;
            res.end("Not found");
        }
    } else {
        res.statusCode = 405;
        res.end("Method not allowed");
    }
});
server.listen(8080, () => {
    console.log("Server is listening on port 8080");
});
